' Comments up here like who worked on it?
@startuml Kotlout
Title: Kotlout
' skinparam linetype ortho

package controller {
    interface Searchable {
        + search(SearchString: String) : List<Experiment>
    }

    class ExperimentListController implements Searchable {
        - experimentList: List<Experiment>
        + ExperimentListController(user: User)
        + getExperiment(id: String) : Experiment
        + getAllExperiments() : List<Experiment>
        + getOwnedExperiments() : List<Experiment>
        + getSubscribedExperiments() : List<Experiment>
        + addExperiment(experiment: Experiment)
    }

    class ExperimentController implements Registerable {
        - experimentContext: Experiment

        + publish()
        + unpublish()

        + resume()
        + end()

        + ignore(user: User)

        + addTrial(newTrial: T)
        + getTrials() : List<Trial>

        + getQuestions() : List<Post>

        + calculateStats(): ExperimentStatistics
    }

    class TrialController implements QrEncodable {
        - trial: Trial
        + upload()
        + getQrCode(): QrCode
        + getTrialData(): Trial
    }

    class PostController {
        - post: Post
        + addReply(reply : Post)
    }

    class FirebaseController {
        + getAuth()
        + getFirestore()
    }

    class UserController {
        - currentUser: User
        - offlineTrials: List<Trial>
        - syncUser()

        + addSubscription(newExperiment: Experiment)
        + removeSubscription(removedExperiment: Experiment)
        + fetchSubscriptions() : List<Experiment>

        ' TODO user-firebase stuff
        {Static} validateEmail(email: String)
        {Static} validatePhoneNumber(phoneNumber: String)
        {Static} registerUser(userUUID: String)
        {Static} fetchUser(userUUID: String): User

        + updateUser(user: User)
    }

    interface QrEncodable {
        + getQrCode(): QrCode
    }


    interface Registerable {
        + registerScannable(barcode: Barcode, preset: Trial)
        + scan()
    }

}

package model {
    package user {
        class User {
                    - uuid: String
                    - email: String
                    - phoneNumber: String
                    - subscriptions: List<Experiment>
                }
    }

    package experiment {
        class ExperimentStatistics {
            - mean: Double
            - standardDeviation: Double
            - quartiles: Double[3]
            + histogramValues : Map<Integer, Double>
            + timePlot: List<Pair<Date, Number>>
        }

        abstract class Experiment <<abstract>> {
            - owner: User
            - description: String
            - region: String
            - minimumTrials: Integer
            - isOngoing: Boolean
            - geolocationRequired: Boolean
            - ignoredUsers: List<User>
            - posts: List<Post>
        }

        class CountExperiment extends Experiment {
            - trials: List<CountTrial>
        }

        class BinomialExperiment extends Experiment {
            - trials: List<BinomialTrial>
        }

        class NonNegativeExperiment extends Experiment {
            - trials: List<NonNegativeTrial>
        }

        class MeasurementExperiment extends Experiment {
            - trials: List<MeasurementTrial>
        }

        class Post {
            - poster: User
            - children: List<Post>
            - parent: Post
            - text: String
            - timestamp: Date
        }

        package trial {
            abstract class Trial <<abstract>> {
                - trialId: Integer
                - experimenter: User
                - experiment: Experiment
                - timestamp: Date
                - location: Geolocation
                - isUploaded: Boolean
            }

            class CountTrial extends Trial {
                'Weird, TODO: What actually is a CountExperiment
                - result: Integer
            }

            class BinomialTrial extends Trial {
                - result: Boolean
            }

            class NonNegativeTrial extends Trial {
                - result: Unsigned Integer
            }

            class MeasurementTrial extends Trial {
                - result: Double
            }
        }

        package scannable {
            class Scannable {
                - experimentId : Integer
                - geolocation : Geolocation
                - outcome : Object
            }

            class Barcode extends Scannable {
                - value : Integer
            }
        }
    }

    package geolocation {
        class Geolocation {
            - latitude: Double
            - longitude: Double
        }
    }
}

package view {
    class MainActivity {

    }

    class ExperimentSearchFragment {

    }

    class SubscribedExperimentListFragment extends ExperimentListFragment{

    }

    class UserExperimentListFragment extends ExperimentListFragment{

    }

    class PublicExperimentListFragment extends ExperimentListFragment{

    }

    class ProfileActivity {

    }

    class NewExperimentActivity {

    }

    class ExperimentViewActivity {

    }

    class ExperimentInfoFragment {

    }

    class ExperimentMapFragment {

    }

    class ExperimentTrialsFragment {

    }

    class ExperimentForumFragment {

    }

    class QrCodeFragment {

    }

    class TrialNewActivity {

    }

    class BarcodeScanActivity {

    }
}

ExperimentListController "1" *-- "0..*" Experiment
ExperimentController "1" o-- "0..1" Experiment : Manages
TrialController "1" *-- "0..1" Trial : Manages
UserController "1" *-- "0..1" User : Manages


Geolocation -- Trial : Performed at
Experiment "1" *-- "0..*" Post : Has questions
BinomialExperiment "1" *-- "0..*" BinomialTrial : Has
NonNegativeExperiment "1" *-- "0..*" NonNegativeTrial : Has
CountExperiment "1" *-- "0..*" CountTrial : Has
MeasurementExperiment "1" *-- "0..*" MeasurementTrial : Has

Experiment "1" *-- "1" ExperimentStatistics : Calculates
User "0..1" o-- "0..*" Experiment: Owns
Experiment "1" -- "0..*" User: Participated
Post "1" *-- "0..*" Post: Replies


MainActivity *-- ExperimentListController : Instantiates
MainActivity *-- ExperimentListFragment : Instantiates
MainActivity *-- ExperimentSearchFragment : Instantiates
MainActivity --> NewExperimentActivity : Launches
MainActivity --> ExperimentViewActivity : Launches


ExperimentViewActivity *- ExperimentController : Instantiates
ExperimentViewActivity *- ExperimentMapFragment : Instantiates
ExperimentViewActivity *- ExperimentInfoFragment : Instantiates
ExperimentViewActivity *- ExperimentForumFragment : Instantiates
ExperimentViewActivity *- ExperimentTrialsFragment : Instantiates

ExperimentViewActivity -[hidden]-> ExperimentController
ExperimentController -[hidden]-> ExperimentMapFragment
ExperimentMapFragment -[hidden]-> ExperimentInfoFragment
ExperimentInfoFragment -[hidden]-> ExperimentForumFragment
ExperimentForumFragment -[hidden]-> ExperimentTrialsFragment

ProfileActivity *-- UserController : Instantiates

ExperimentViewActivity --> TrialNewActivity : Launches
ExperimentViewActivity -- QrCodeFragment : Instantiates

TrialNewActivity --> BarcodeScanActivity : Launches

view -[hidden]-> controller
controller -[hidden]-> model
ExperimentTrialsFragment -[hidden]-> controller
ExperimentController -[hidden]-> model
ExperimentTrialsFragment -[hidden]-> UserController
ExperimentController -[hidden]-> user
ExperimentStatistics -[hidden]-> trial

@enduml
