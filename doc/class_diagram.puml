' Comments up here like who worked on it?
@startuml Kotlout
Title: Kotlout
' skinparam linetype ortho
' skinparam groupInheritance 4

package controller {
    interface Searchable {
        + search(SearchString: String): List<Experiment>
    }

    class ExperimentListController implements Searchable {
        - experimentList: List<Experiment>
        + ExperimentListController(userUuid: String)
        + getExperiment(id: String): Experiment
        + getAllExperiments(): List<Experiment>
        + getOwnedExperiments(): List<Experiment>
        + getSubscribedExperiments(): List<Experiment>
    }

    class ExperimentController<T extends Trial> implements Registerable {
        - experimentId: UUID<Experiment>
        - experimentType: ExperimentType
        - experimentContext: Experiment<T>

        + publish()
        + unpublish()

        + resume()
        + end()

        + ignore(user: User)

        + addTrial(newTrial: T)
        + getTrials(): List<T>

        + getQuestions(): List<Post>

        + calculateStats(): ExperimentStatistics
    }

    class TrialController implements QrEncodable {
        - trial: Trial
        + upload()
        + getQrCode(): QrCode
        + getTrialData(): Trial
    }

    class PostController {
        - experimentID: UUID<Experiment>
        + addPost(post: Post)
        + addReply(post: Post, replyTo: UUID<Post>)
    }

    class FirebaseController {
        + getAuth()
        + getFirestore()
    }

    class UserController {
        - currentUser: User
        - offlineTrials: List<Trial>
        - syncUser()

        + addSubscription(newExperiment: Experiment)
        + removeSubscription(removedExperiment: Experiment)
        + fetchSubscriptions(): List<Experiment>

        ' TODO user-firebase stuff
        {Static} validateEmail(email: String)
        {Static} validatePhoneNumber(phoneNumber: String)
        {Static} registerUser(userUUID: String)
        {Static} fetchUser(userUUID: String): User

        + updateUser(user: User)
    }

     class UserHelper {
        + {Static} USER_COLLECTION: String
        + {Static} UUID_INTENT: String
        + {Static} validateEmail(email: String): Boolean
        + {Static} validatePhoneNumber(phoneNumber: String): Boolean
        + {Static} readUuid(): String
        + {Static} initUserHelper(context: Context)
        + {Static} initalizeUser()
    }

    interface QrEncodable {
        + getQrCode(): QrCode
    }


    interface Registerable {
        + registerScannable(barcode: Barcode, preset: Trial)
        + scan()
    }

}

package model {
    package user {
        class User {
                    - uuid: UUID<User>
                    - email: String
                    - phoneNumber: String
                    - subscriptions: List<UUID<Experiment>>
                }
    }

    package experiment {
        class ExperimentStatistics {
            - mean: Double
            - standardDeviation: Double
            - quartiles: Double[3]
            + histogramValues: Map<Integer, Double>
            + timePlot: List<Pair<Date, Number>>
        }

        class Experiment<T extends Trial> {
            - experimentID: UUID<Experiment>
            - owner: UUID<User>
            - description: String
            - region: String
            - minimumTrials: Integer
            - isOngoing: Boolean
            - is: Boolean
            - geolocationRequired: Boolean
            - ignoredUsers: List<UUID<User>>
            - posts: List<Post>
        }

        class CountExperiment extends Experiment {
            - trials: List<CountTrial>
        }

        class BinomialExperiment extends Experiment {
            - trials: List<BinomialTrial>
        }

        class NonNegativeExperiment extends Experiment {
            - trials: List<NonNegativeTrial>
        }

        class MeasurementExperiment extends Experiment {
            - trials: List<MeasurementTrial>
        }

        class Post {
            - postId: UUID<Post>
            - poster: UUID<User>
            - parent: UUID<Post>
            - text: String
            - timestamp: Date
        }

        package trial {
            abstract class Trial <<abstract>> {
                - trialId: UUID<Trial>
                - experimenter: UUID<User>
                - experiment: UUID<Experiment>
                - timestamp: Date
                - location: Geolocation
                - isUploaded: Boolean
            }

            class CountTrial extends Trial {
                'Weird, TODO: What actually is a CountExperiment
                - result: Integer
            }

            class BinomialTrial extends Trial {
                - result: Boolean
            }

            class NonNegativeTrial extends Trial {
                - result: Unsigned Integer
            }

            class MeasurementTrial extends Trial {
                - result: Double
            }
        }

        package scannable {
            class Scannable {
                - experimentId: UUID<Experiment>
                - geolocation: Geolocation
                - outcome: Trial
            }

            class Barcode extends Scannable {
                - value: Integer
            }
        }
    }

    package geolocation {
        class Geolocation {
            - latitude: Double
            - longitude: Double
        }
    }
}

package view {
    class MainActivity {

    }

    class ExperimentSearchFragment {

    }

    class ExperimentListFragment {

    }

    class ProfileActivity {

    }

    class NewExperimentActivity {

    }

    class ExperimentViewActivity {

    }

    class ExperimentInfoFragment {

    }

    class ExperimentMapFragment {

    }

    class ExperimentTrialsFragment {

    }

    class DiscussionPostsActivity {

    }

    class QrCodeFragment {

    }

    class TrialNewActivity {

    }

    class BarcodeScanActivity {

    }
}

ExperimentListController "1" *-- "0..*" Experiment
ExperimentController "1" o-- "0..1" Experiment : Manages
TrialController "1" *-- "0..1" Trial : Manages
UserController "1" *-- "0..1" User : Manages


Geolocation -* Trial : Performed at
Experiment "1" *- "0..*" Post : Has questions
BinomialExperiment "1" *- "0..*" BinomialTrial : Has
NonNegativeExperiment "1" *- "0..*" NonNegativeTrial : Has
CountExperiment "1" *- "0..*" CountTrial : Has
MeasurementExperiment "1" *- "0..*" MeasurementTrial : Has

Experiment "1" *-- "1" ExperimentStatistics : Calculates
User "0..1" o-- "0..*" Experiment: Owns
Experiment "1" -- "0..*" User: Participated
Post "0..*" --> "0..1" Post: Replies


MainActivity *- ExperimentListController : Instantiates
MainActivity *- ExperimentListFragment : Instantiates
MainActivity *- ExperimentSearchFragment : Instantiates
MainActivity -> NewExperimentActivity : Launches
MainActivity -> ExperimentViewActivity : Launches
MainActivity -> ProfileActivity : Launches


ExperimentViewActivity --> DiscussionPostsActivity : Launches
ExperimentViewActivity *- ExperimentController : Instantiates
ExperimentViewActivity *- ExperimentMapFragment : Instantiates
ExperimentViewActivity *- ExperimentInfoFragment : Instantiates
ExperimentViewActivity *- ExperimentTrialsFragment : Instantiates
DiscussionPostsActivity *-> PostController : Instantiates


ProfileActivity *-> UserController : Instantiates

UserController --> FirebaseController: Uses
ExperimentController --> FirebaseController: Uses
ExperimentListController --> FirebaseController: Uses
UserHelper --> FirebaseController: Uses
UserController --> UserHelper: Uses


ExperimentViewActivity --> TrialNewActivity : Launches
ExperimentViewActivity -- QrCodeFragment : Instantiates

TrialNewActivity --> BarcodeScanActivity : Launches


' Down here is just stuff to get it to format how the TA wants '

MainActivity -[hidden]-> ExperimentListController
ExperimentListController -[hidden]-> ExperimentListFragment
ExperimentListFragment -[hidden]-> ExperimentSearchFragment
ExperimentSearchFragment -[hidden]-> NewExperimentActivity
NewExperimentActivity -[hidden]-> ExperimentViewActivity

ExperimentViewActivity -[hidden]-> ExperimentController
ExperimentController -[hidden]-> ExperimentMapFragment
ExperimentMapFragment -[hidden]-> ExperimentInfoFragment
ExperimentInfoFragment -[hidden]-> DiscussionPostsActivity
DiscussionPostsActivity -[hidden]-> ExperimentTrialsFragment

view -[hidden]-> controller
controller -[hidden]-> model
ExperimentTrialsFragment -[hidden]-> controller
ExperimentTrialsFragment -[hidden]-> QrEncodable
Searchable -[hidden]-> model
ExperimentTrialsFragment -[hidden]-> UserHelper
ExperimentController -[hidden]-> user
ExperimentStatistics -[hidden]-> trial
ExperimentTrialsFragment -[hidden]-> controller

Trial -[hidden]-> BinomialTrial
BinomialTrial -[hidden]-> NonNegativeTrial
NonNegativeTrial -[hidden]-> CountTrial
CountTrial -[hidden]-> MeasurementTrial

Experiment -[hidden]-> BinomialExperiment
BinomialExperiment -[hidden]-> NonNegativeExperiment
NonNegativeExperiment -[hidden]-> CountExperiment
CountExperiment -[hidden]-> MeasurementExperiment

Geolocation -[hidden]-> experiment

BinomialTrial -[hidden]-> BinomialExperiment

user -[hidden]> Geolocation


PostController -[hidden]-> UserHelper
UserHelper -[hidden]-> FirebaseController
UserHelper -[hidden]-> Searchable
Searchable -[hidden]-> user
FirebaseController -[hidden]-> PostController
PostController -[hidden]-> UserController
' ExperimentTrialsFragment -[hidden]-> PostController
' ExperimentController -[hidden]-> ExperimentListController
' ExperimentListController -[hidden]-> Searchable
Searchable -[hidden]-> User

@enduml
